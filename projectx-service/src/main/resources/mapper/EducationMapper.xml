<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cci.projectx.core.repository.EducationRepository">
  <resultMap id="BaseResultMap" type="com.cci.projectx.core.entity.Education">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="university" jdbcType="VARCHAR" property="university" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="majorX" jdbcType="VARCHAR" property="majorx" />
    <result column="majorX_for_short" jdbcType="VARCHAR" property="majorxForShort" />
    <result column="majorY" jdbcType="VARCHAR" property="majory" />
    <result column="majorY_for_short" jdbcType="VARCHAR" property="majoryForShort" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, university, degree, majorX, majorX_for_short, majorY, majorY_for_short, 
    start_time, end_time, sort
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from education
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from education
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cci.projectx.core.entity.Education">
    insert into education (id, user_id, university, 
      degree, majorX, majorX_for_short, 
      majorY, majorY_for_short, start_time, 
      end_time, sort)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{university,jdbcType=VARCHAR}, 
      #{degree,jdbcType=VARCHAR}, #{majorx,jdbcType=VARCHAR}, #{majorxForShort,jdbcType=VARCHAR}, 
      #{majory,jdbcType=VARCHAR}, #{majoryForShort,jdbcType=VARCHAR}, #{startTime,jdbcType=DATE}, 
      #{endTime,jdbcType=DATE}, #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cci.projectx.core.entity.Education">
    insert into education
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="university != null">
        university,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="majorx != null">
        majorX,
      </if>
      <if test="majorxForShort != null">
        majorX_for_short,
      </if>
      <if test="majory != null">
        majorY,
      </if>
      <if test="majoryForShort != null">
        majorY_for_short,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="university != null">
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="majorx != null">
        #{majorx,jdbcType=VARCHAR},
      </if>
      <if test="majorxForShort != null">
        #{majorxForShort,jdbcType=VARCHAR},
      </if>
      <if test="majory != null">
        #{majory,jdbcType=VARCHAR},
      </if>
      <if test="majoryForShort != null">
        #{majoryForShort,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cci.projectx.core.entity.Education">
    update education
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="university != null">
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="majorx != null">
        majorX = #{majorx,jdbcType=VARCHAR},
      </if>
      <if test="majorxForShort != null">
        majorX_for_short = #{majorxForShort,jdbcType=VARCHAR},
      </if>
      <if test="majory != null">
        majorY = #{majory,jdbcType=VARCHAR},
      </if>
      <if test="majoryForShort != null">
        majorY_for_short = #{majoryForShort,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cci.projectx.core.entity.Education">
    update education
    set user_id = #{userId,jdbcType=BIGINT},
      university = #{university,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      majorX = #{majorx,jdbcType=VARCHAR},
      majorX_for_short = #{majorxForShort,jdbcType=VARCHAR},
      majorY = #{majory,jdbcType=VARCHAR},
      majorY_for_short = #{majoryForShort,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCount" parameterType="com.cci.projectx.core.entity.Education" resultType="java.lang.Integer">
    select count(*) from education
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="university != null">
        and university = #{university,jdbcType=VARCHAR}
      </if>
      <if test="degree != null">
        and degree = #{degree,jdbcType=VARCHAR}
      </if>
      <if test="majorx != null">
        and majorX = #{majorx,jdbcType=VARCHAR}
      </if>
      <if test="majorxForShort != null">
        and majorX_for_short = #{majorxForShort,jdbcType=VARCHAR}
      </if>
      <if test="majory != null">
        and majorY = #{majory,jdbcType=VARCHAR}
      </if>
      <if test="majoryForShort != null">
        and majorY_for_short = #{majoryForShort,jdbcType=VARCHAR}
      </if>
      <if test="startTime != null">
        and start_time = #{startTime,jdbcType=DATE}
      </if>
      <if test="endTime != null">
        and end_time = #{endTime,jdbcType=DATE}
      </if>
      <if test="sort != null">
        and sort = #{sort,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectPage" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from education where 1 = 1 
    <if test="param1.id != null">
      and id = #{param1.id,jdbcType=BIGINT}
    </if>
    <if test="param1.userId != null">
      and user_id = #{param1.userId,jdbcType=BIGINT}
    </if>
    <if test="param1.university != null">
      and university = #{param1.university,jdbcType=VARCHAR}
    </if>
    <if test="param1.degree != null">
      and degree = #{param1.degree,jdbcType=VARCHAR}
    </if>
    <if test="param1.majorx != null">
      and majorX = #{param1.majorx,jdbcType=VARCHAR}
    </if>
    <if test="param1.majorxForShort != null">
      and majorX_for_short = #{param1.majorxForShort,jdbcType=VARCHAR}
    </if>
    <if test="param1.majory != null">
      and majorY = #{param1.majory,jdbcType=VARCHAR}
    </if>
    <if test="param1.majoryForShort != null">
      and majorY_for_short = #{param1.majoryForShort,jdbcType=VARCHAR}
    </if>
    <if test="param1.startTime != null">
      and start_time = #{param1.startTime,jdbcType=DATE}
    </if>
    <if test="param1.endTime != null">
      and end_time = #{param1.endTime,jdbcType=DATE}
    </if>
    <if test="param1.sort != null">
      and sort = #{param1.sort,jdbcType=INTEGER}
    </if>
    <if test="param2.sort != null">
      order by 
      <foreach collection="param2.sort" item="order" separator=",">
        ${order.property} ${order.direction}
      </foreach>
    </if>
    <if test="param2.offset >= 0 and param2.pageSize > 0">
      limit ${param2.offset}, ${param2.pageSize}
    </if>
  </select>
</mapper>